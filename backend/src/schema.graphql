scalar DateTime

type SuccessMessage {
  message: String
}

type Query {
  me: User
  events: [Event!]!
}

type Mutation {
  signup(email: String!, password: String!, name: String): AuthPayload!
  signin(email: String!, password: String!): AuthPayload!
  signout: SuccessMessage
  addEvent(eventId: String!): Event
  removeEvent(eventId: String!): Event
}

type AuthPayload {
  token: String!
  user: User!
}

type Event {
  eventId: String!
  users: [User!]
}

type User {
  id: ID!
  email: String!
  password: String!
  name: String
  events: [Event!]
}
